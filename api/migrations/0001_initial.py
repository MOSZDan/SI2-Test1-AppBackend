# Generated by Django 5.2.6 on 2025-09-10 05:42

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('document_type', models.CharField(default='CI', max_length=20)),
                ('document_number', models.CharField(max_length=20, unique=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrador'), ('OWNER', 'Copropietario'), ('TENANT', 'Inquilino'), ('SECURITY', 'Personal de Seguridad'), ('MAINTENANCE', 'Personal de Mantenimiento')], default='TENANT', max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Activo'), ('INACTIVE', 'Inactivo'), ('PENDING', 'Pendiente de Verificación'), ('BLOCKED', 'Bloqueado')], default='PENDING', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('password_reset_token', models.CharField(blank=True, max_length=255, null=True)),
                ('password_reset_token_created', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token de Verificación de Email',
                'verbose_name_plural': 'Tokens de Verificación de Email',
                'db_table': 'email_verification_tokens',
            },
        ),
        migrations.CreateModel(
            name='HousingUnit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('unit_number', models.CharField(max_length=20, unique=True)),
                ('unit_type', models.CharField(choices=[('APARTMENT', 'Departamento'), ('HOUSE', 'Casa'), ('OFFICE', 'Oficina'), ('COMMERCIAL', 'Local Comercial')], default='APARTMENT', max_length=20)),
                ('floor', models.IntegerField(blank=True, null=True)),
                ('building', models.CharField(blank=True, max_length=50, null=True)),
                ('area_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bedrooms', models.IntegerField(default=1)),
                ('bathrooms', models.IntegerField(default=1)),
                ('parking_spaces', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_tenant', models.ForeignKey(blank=True, limit_choices_to={'role': 'TENANT'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rented_units', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(limit_choices_to={'role': 'OWNER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_units', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Unidad Habitacional',
                'verbose_name_plural': 'Unidades Habitacionales',
                'db_table': 'housing_units',
                'ordering': ['building', 'floor', 'unit_number'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('permissions', models.JSONField(default=dict)),
                ('is_system_role', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
                'db_table': 'roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('LOGIN', 'Inicio de Sesión'), ('LOGOUT', 'Cierre de Sesión'), ('CREATE', 'Crear'), ('UPDATE', 'Actualizar'), ('DELETE', 'Eliminar'), ('VIEW', 'Ver'), ('EXPORT', 'Exportar'), ('PASSWORD_CHANGE', 'Cambio de Contraseña'), ('PASSWORD_RESET', 'Reseteo de Contraseña'), ('FAILED_LOGIN', 'Intento de Login Fallido')], max_length=20)),
                ('module', models.CharField(max_length=50)),
                ('model_name', models.CharField(blank=True, max_length=50, null=True)),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registro de Auditoría',
                'verbose_name_plural': 'Registros de Auditoría',
                'db_table': 'audit_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='audit_logs_created_43fcd6_idx'), models.Index(fields=['user', '-created_at'], name='audit_logs_user_id_6193b2_idx'), models.Index(fields=['action', '-created_at'], name='audit_logs_action_bcaa71_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserUnitRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relation_type', models.CharField(choices=[('OWNER', 'Propietario'), ('TENANT', 'Inquilino'), ('AUTHORIZED', 'Autorizado')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_relations', to='api.housingunit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_relations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relación Usuario-Unidad',
                'verbose_name_plural': 'Relaciones Usuario-Unidad',
                'db_table': 'user_unit_relations',
                'unique_together': {('user', 'unit', 'start_date')},
            },
        ),
    ]
